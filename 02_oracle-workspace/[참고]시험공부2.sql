-- 2/17 시험대비
-- 순위매기/ 사용자 권한 부여

-- 각 부서별 최고급여를 받는 사원들 사번, 사원별, 부서코드, 급여

SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE (DEPT_CODE, SALARY) IN (SELECT DEPT_CODE, MAX(SALARY)
                             FROM EMPLOYEE
                             GROUP BY DEPT_CODE);
                             -- DEPT_CODE = NULL AND SALARY = 2890000
--=> 부서가 없는 사원은 조회되지 않음!

-->NVL 함수를 이용해서 변경
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE (NVL(DEPT_CODE, '없음'),SALARY) IN (SELECT NVL(DEPT_CODE,'없음'), MAX(SALARY)
                             FROM EMPLOYEE
                             GROUP BY DEPT_CODE);


-- BOARD 테이블 생성하는 구문
CREATE TABLE BOARD(
    BOARDNO NUMBER CONSTRAINT B_PK PRIMARY KEY,
    BOARDTITLE VARCHAR2(50),
    BOARDDATE DATE,
    BOARDWRITER VARCHAR2(15),
    BOARDCONTENT VARCHAR2(2000),
    ORGINAL_FILEPATH VARCHAR2(100),
    RENAME_FILEPATH VARCHAR2(100)
    
);

COMMENT ON COLUMN BOARD.BOARDNO IS '게시글번호';
COMMENT ON COLUMN BOARD.BOARDTITLE IS '게시글제목';
COMMENT ON COLUMN BOARD.BOARDDATE IS '게시글등록날짜';
COMMENT ON COLUMN BOARD.BOARDWRITER IS '게시글작성자아이디';
COMMENT ON COLUMN BOARD.BOARDCONTENT IS '게시글내용';
COMMENT ON COLUMN BOARD.ORGINAL_FILEPATH IS '첨부파일원본명';
COMMENT ON COLUMN BOARD.RENAME_FILEPATH IS '첨부파일수정명';

-- INSERT 도 몇행 삽입
INSERT INTO BOARD
VALUES(1,'안녕하세요!',SYSDATE,'ABCD','안녕하세요. 가입인사합니다.','123','123_수정');

INSERT INTO BOARD
VALUES(2,'안녕!',SYSDATE,'EFG','안녕~가입인사합니다.','555','55_수정');

SELECT * FROM BOARD;

-- BOARD테이블에 최근에 등록된 게시글 5개를 조회(모든컬럼조회)하는 TOP-N 분석 구문을 작성해보시오
-->> 1. ROWNUM 이용한 방법
SELECT *
FROM (SELECT BOARDNO, BOARDTITLE,  BOARDDATE, BOARDWRITER,  BOARDCONTENT, 
             ORGINAL_FILEPATH, RENAME_FILEPATH, RANK() OVER(ORDER BY SYSDATE) "순위"
      FROM BOARD
      ORDER BY BOARDDATE DESC)
WHERE ROWNUM <= 5;

-->> 2. RANK() 함수를 이용한 방법
SELECT * 
FROM (SELECT BOARDNO, BOARDTITLE,  BOARDDATE, BOARDWRITER,  BOARDCONTENT, 
             ORGINAL_FILEPATH, RENAME_FILEPATH, RANK() OVER(ORDER BY SYSDATE) "순위"
      FROM BOARD)
WHERE 순위 <= 5;



-->> RANK() OVER() / DENSE_RANK() OVER() 특징 차이점
-->> JOIN공부
-->> 테이블 생성 => DDL 실습문제(도서관리프로그램)
-->> INSERT